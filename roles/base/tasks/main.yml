# Pre_task
- name: BASE > Install aptitude
  apt:
    name: aptitude
    state: present
  become: yes


# Base role task
- name: BASE > Check distribution
  debug:
    var: "{{ item }}"
  loop:
    - ansible_distribution
    - ansible_distribution_version
  failed_when:
    - ansible_distribution != 'Ubuntu' or ansible_distribution_version != '18.04'

- name: BASE > Install packages for front server
  apt:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  loop:
    - tcl-dev
    - gettext
    - fail2ban
    - openssl
    - python-pip
    - make
    - wget
    - unzip
    - logrotate
    - zlib1g-dev
    - libssl-dev
    - libreadline6-dev
    - libncurses5-dev
    - libxml2-dev
    - libxslt1-dev
    - libcurl4-openssl-dev
    - libexpat1-dev
    - libz-dev
    - libssl-dev
    - libffi-dev
    - libyaml-dev
    - libsqlite3-dev
    - sqlite3
    - software-properties-common
    - build-essential
    - socat
    - apt-transport-https
    - curl
    - supervisor
    - vim
    - git
    - tree
    - sysstat
  become: yes

- name: BASE > Install botocore and boto3
  pip:
    executable: pip2
    name: [ "boto3", "botocore"]
  become: yes


# Set PAM limits
- name: BASE > Set PAM limits
  pam_limits:
    domain: "*"
    limit_type: "-"
    limit_item: nofile
    value: "{{ base_maxopenfile | string }}"
    use_max: yes
  become: yes
- name: BASE > Reload settings system configuration files
  shell: sysctl --system
  become: yes


# Disable systemd-timesyncd service on ubuntu 18
- name: BASE > Disabling "systemd-timesyncd"
  systemd:
    name: systemd-timesyncd
    state: stopped
    enabled: no
  become: yes


# Install chronyd
- name : BASE > Install service chrony
  apt:
    name: chrony
    state: present
  become: yes

- name: BASE > Copy chrony.conf
  template:
    src: "chrony.conf.j2"
    dest: "/etc/chrony/chrony.conf"
    owner: root
    group: root
    mode: 0644
  become: yes
  tags: [ wp_platform_base_190221 ]

- name: BASE > Enable service chrony
  service:
    name: chrony
    state: started
    enabled: yes

- name: BASE > Restart service chrony
  command: systemctl restart chrony
  become: yes
  when: ansible_run_tags == ['wp_platform_base_190221'] #Reconfigure chrony service need to restart. Only running directly on WordPress server, do not run when excuting packer build
  tags: [ wp_platform_base_190221 ]

- name: BASE > Check status service chrony
  command: systemctl status chrony
  register: chrony_status
  tags: [ wp_platform_base_190221 ]
- debug: var=chrony_status.stdout_lines
  tags: [ wp_platform_base_190221 ]


# Set TimeZone
- name: BASE > Set timezone to Asia/Tokyo
  timezone:
    name: "{{ base_timezone }}"
  become: yes

- name: BASE > Check datetime on server
  command: timedatectl
  register: datetime_status
- debug: var=datetime_status.stdout_lines
